name: Ansible
on: [push, pull_request]

jobs:
  ansible-lint:
    name: ansible lint
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[ci skip]') == false

    steps:
    - uses: actions/checkout@v2

    - name: Lint Ansible Playbook
      uses: ansible/ansible-lint-action@master
      with:
        targets: "site.yml"

  ansible-playbook:
    name: ansible playbook on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        # os: [macOS-latest, ubuntu-latest, ubuntu-18.04, ubuntu-16.04]
        os: [macOS-latest]
    env:
      PYTHON_VERSION: 3.7
    needs: ansible-lint

    steps:
      - uses: actions/checkout@v2

      - name: spctl
        run: sudo /usr/sbin/spctl --master-disable
        if: runner.os == 'macOS'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install requirements
        run: |
          pip install -U pip
          pip install -r requirements.txt

      - name: Run ansible playbook to "dev" inventory hosts
        run: ansible-playbook site.yml -l dev -vvv

  ansible-playbook-container:
    name: ansible playbook on ${{ matrix.container }} container
    runs-on: ubuntu-latest
    container: 
      image: ${{ matrix.container }}
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        container: ['centos:7','centos:8']
    needs: ansible-lint

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        run: |
          yum install -y python3-setuptools gcc python3-devel

      - name: Install requirements
        run: |
          pip3 install -U pip
          pip3 install -r requirements.txt

      - name: Run ansible playbook to "dev" inventory hosts
        run: ansible-playbook site.yml -l dev --skip-tags docker -vvv